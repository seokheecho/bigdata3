/* 클래스 변수와 클래스 메서드 사용하기 
 * => 클래스 변수나 클래스 메서드를 사용할 때는 클래스명을 명시해야 한다.
 * => 그런데 인스턴스를 통해 클래스 변수나 클래스 메서드를 사용할 수 있다.
 * => 하지만, 인스턴스를 통해 사용하면 인스턴스 변수나 인스턴스 메서드로 오해받기 쉽다.
 *    가능한 클래스 변수나 클래스 메서드는 인스턴스 대신 클래스명으로 사용하라! 
 *    
 */
package step09;

class MyClass {
  static int a;
  static void m() {
    //System.out.printf("===> %d\n", MyClass.a); // 원래는 클래스 변수를 이렇게 사용한다.
    System.out.printf("===> %d\n", a); // 그러나 같은 멤버이기 때문에 클래스명을 생략할 수 있다.
  }
}

public class Test02_3 {
  public static void main(String[] args) {
    // 클래스 변수나 클래스 메서드는 다음과 같이 클래스명으로 사용해야 한다.
    MyClass.a = 100;
    MyClass.m();
    
    MyClass obj = new MyClass();
    obj.a = 200; // 인스턴스를 가리키는 레퍼런스를 통해(인스턴스를 통해) 클래스 변수를 사용할 수 있다.
                 // 인스턴스 변수 중에 a가 없다면 클래스 변수 중에 a가 있는지 찾아 본다.
    
    obj.m(); // 인스턴스를 통해 클래스 메서드를 호출할 수 있다.
             // 인스턴스 메서드 중에 m()이 없다면, 클래스 메서드 중에서 m()을 찾아 본다.
             // 인스턴스를 통해 클래스 메서드를 호출하더라도 인스턴스 주소가 전달되지는 않는다.
             // 왜? 클래스 메서드는 this라는 내장 변수(built-in)가 없다.
    
    // 위와 같이 문법 상으로는 인스턴스 레퍼런스를 가지고 클래스 변수나 클래스 메서드를 사용할 수 있다 하더라도,
    // 인스턴스 레퍼런스로 사용하지 말라! 
    // 다른 개발자가 코드를 보고 인스턴스 변수나 인스턴스 메서드로 착각할 수 있다.
    // 따라서 가능한 클래스 변수나 클래스 메서드를 사용할 때는 클래스 이름으로 사용하라!
  }
}









