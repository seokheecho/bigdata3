/* 추상 메서드
 * => 메서드의 시그너처(signature)만 있고 본체가 없는 것.
 *    시그너처? 리턴타입, 메서드명, 파라미터 선언까지를 말한다.
 *    예) void plus(int a, int b);
 * => 일반메서드와 추상 메서드 
 *    일반메서드 : void plus(int a, int b) {...}
 *    추상메서드 : abstract void plus(int a, int b);
 * => 목적
 *    - 서브 클래스가 반드시 가져야할 메서드를 수퍼 클래스에 선언.
 *    - 서브 클래스가 반드시 메서드를 오버라이딩하게 강제할 때.
 *    - 수퍼 클래스에서 메서드를 정의해봐야 소용없는 메서드.
 *      즉 서브 클래스마다 다르게 구현해야 하는 메서드.
 *    - 메서드의 몸체없기 때문에 호출될 수 없다.
 *    - 호출될 수 없는 메서드를 일반 클래스가 가져서는 안되기 때문에
 *      그래서 추상 메서드는 추상 클래스에서만 선언할 수 있다.
 * => 예)
 *    - Vehicle 클래스의 경우
 *      start(), stop() 메서드는 아예 아무런 일을 하지 않는다.
 *      run() 메서드는 몸체({..})를 만들기는 했지만, 
 *      어차피 자식 클래스의 의해 오버라이딩 될 것이 확실한 메서드이다.
 *    - 그렇다면 굳이 메서드의 몸체를 만들 필요가 있는가?
 *      그렇다고 메서드를 없앨 수 는 없다.
 *      왜? 서브 클래스가 반드시 가져야할 메서드이기 때문이다.
 *    - 결론!
 *      - 서브 클래스를 위해 메서드는 있어야 하지만, 
 *        어떻게 동작할 지 구체적으로 구현할 필요는 없는 메서드.
 *      - 그런 메서드는 추상 메서드로 선언하라!
 * 추상 메서드
 * - 서브 클래스에게 오버라이딩을 강제하고 싶은 메서드.
 * - 수퍼 클래스에서 정의해봐야 소용없고, 서브 클래스에서 재정의 할 수 밖에 없는 메서드.
 * - 서브 클래스에 반드시 있어야 할 메서드이지만, 그렇다고 수퍼 클래스에서 정의할 수 없는 메서드.     
 *       
 */
package step17.ex6;

public class Test01 {

  public static void main(String[] args) {
    // 자동차를 다루기 위해 객체를 준비한다.
    Tico car1 = new Tico();
    car1.run();
    
    Truck car2 = new Truck();
    car2.run();
    
    ElectCar car3 = new ElectCar();
    car3.run();
    
    
    // 추상 클래스를 인스턴스를 만들어 직접 사용할 수 없다!
    //Vehicle car4 = new Vehicle(); // 컴파일 오류!
    //car4.run();
    
    //Car car5 = new Car();
    //car5.run();
    

  }

}








