/* 비트 이동 연산자: >>, >>>, <<
 * => 비트를 왼쪽 또는 오른쪽으로 이동시킨다. 
 * => 비트 이동 시에 메모리를 벗어나는 비트는 버린다. 
 * 
 */
package step04;

public class Test05_1 {
  public static void main(String[] args) {
    int a = 0b0000_0000_0000_0000_0000_0000_0110_1010, // = 106
        b = 0b1111_1111_1111_1111_1111_0001_0101_1000; // = -3752
    
    System.out.printf("a = %d\n", a);
    System.out.printf("b = %d\n", b);
    
    // 값 >> n: 오른쪽으로 n 비트를 이동시킨다. 
    //     왼쪽 빈자리는 부호비트와 같은 값으로 채운다.
    //     오른쪽으로 이동시켜서 메모리를 넘어가는 비트는 버린다.
    //     주어진 값을 (2**n)로 나누는 효과가 있다.
    System.out.println(a >> 3);
    // [00000000000000000000000001101010]     = 106
    // [000|00000000000000000000000001101]010 = 13 = 106 / 2**3 = 106 / 8
    // 오른쪽으로 이동하면서 왼쪽에 생긴 3개의 빈자리는 원래의 값의 부호비트 0으로 채운다.
    System.out.println(b >> 3);
    // [11111111111111111111000101011000]     = -3752
    // [111|11111111111111111111000101011]000 = -469 = -3752 / 2**3 = -3752 / 8
    // 오른쪽으로 이동하면서 왼쪽에 생긴 3개의 빈자리는 부호비트 1로 채운다.
    
    // 값 >>> n: 오른쪽으로 n 비트를 이동시킨다. 
    //     왼쪽 빈자리는 무조건 0으로 채운다.
    //     오른쪽으로 이동시켜서 메모리를 넘어가는 비트는 버린다.
    //     주어진 값을 (2**n)로 나누는 효과가 있다.
    System.out.println(a >>> 3);
    // [00000000000000000000000001101010]     = 106
    // [000|00000000000000000000000001101]010 = 13 = 106 / 2**3 = 106 / 8
    // 오른쪽으로 이동하면서 왼쪽에 생긴 3개의 빈자리는 0으로 채운다.
    System.out.println(b >>> 3);
    // [11111111111111111111000101011000]     = -3752
    // [000|11111111111111111111000101011]000 = 536870443 = 음수가 양수로 바뀌었다.
    // 오른쪽으로 이동하면서 왼쪽에 생긴 3개의 빈자리는 0으로 채운다.
    
    
    // 값 << n: 왼쪽으로 n 비트를 이동시킨다. 
    //     오른쪽 빈자리는 0으로 채운다.
    //     왼쪽으로 이동시켜서 메모리를 넘어가는 비트는 버린다.
    //     주어진 값을 (2**n)로 곱하는 효과가 있다.
    System.out.println(a << 3);
    //    [00000000000000000000000001101010]  = 106
    // 000[00000000000000000000001101010]000  = 848 = 106 * 2**3 = 106 * 8
    // 왼쪽으로 이동하면서 오른쪽에 생긴 3개의 빈자리는 0으로 채운다.
    System.out.println(b << 3);
    //    [11111111111111111111000101011000]     = -3752
    // 111[11111111111111111000101011000]000     = -30016 = -3752 * 2**3 = -3752 * 8
    // 왼쪽으로 이동하면서 오른쪽에 생긴 3개의 빈자리는 0으로 채운다.
  }
}
