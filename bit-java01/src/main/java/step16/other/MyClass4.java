// 오버라이딩 불가 메서드 만들기
package step16.other;

// 필드 앞에 final을 붙이면 상수 값으로 취급한다.
public class MyClass4 {
  int a = 10;
  
  // 필드에 final을 붙이면 무조건 초기 값을 설정해야 한다.
  //final int b; // 이렇게 설정하지 않으면 컴파일 오류!
  final int b = 100; // 이렇게 반드시 초기값을 설정해야  한다.
  
  // 인스턴스 변수의 값을 바꿀 수 없다면, 인스턴스 변수의 본래 목적을 상실하게 된다.
  // 인스턴스 변수의 본래 목적이 뭔데?
  // => 각 인스턴스 별로 개별적인 값을 저장하는 것.
  // => 값을 바꿀 수 없다면, 모든 인스턴스가 같은 값을 가질 것 아닌가!
  // => 값을 바꿀 수 없다면 차라리 클래스 변수(스태틱 변수)로 만들라!
  // 그래서 final 변수(상수 변수)는 보통 static으로 선언한다.
  // 클래스 변수이면서, 상수라면 보통 공개하기 위함이다. 그래서 public 을 많이 붙인다.
  public static final int c = 200;
  
  public void m1() {
    //b = 200; // final 변수는 값을 변경할 수 없다. 컴파일 오류!
  }
  
}
