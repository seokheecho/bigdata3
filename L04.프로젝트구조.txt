# 프로젝트 구조
애플리케이션 소스 파일과 실행 파일을 효율적으로 관리하기 위해
만든 디렉토리 구조

1. 디렉토리 구조
src : 자바 소스 파일 및 관련 파일을 두는 폴더
  - main
    - java : 자바 소스 파일을 두는 폴더
    - resources : 자바 애플리케이션이 사용할 파일을 두는 폴더
  - test
    - java : 단위 테스트 관련 자바 소스 파일을 두는 폴더
    - resources : 테스트에서 사용할 기타 파일을 두는 폴더
bin : 컴파일된 .class 파일 및 관련 파일을 두는 폴더 

2. 컴파일 옵션
프로젝트폴더> javac 옵션 자바소스파일
[컴파일러 옵션]
-d 디렉토리경로 : 컴파일 결과 파일을 둘 폴더
   예) javac -d bin Hello.java
-sourcepath 디렉토리경로 : 
   컴파일 하는 자바 소스 파일에서  참조할 다른 소스 파일의 위치 
   예) javac -sourcepath src/main/java src/main/java/Hello.java    
-encoding 문자집합 : 자바 소스 파일의 인코딩 형식을 컴파일러에게 알려준다.
   즉 자바 소스 파일이 어떤 규칙으로 저장되었는지 자바 컴파일러에게 알려줘야 한다.
   그래야 자바 컴파일러는 그 규칙에 따라 소스 파일을 읽어서 정확하게 컴파일 해준다. 
   만약 소스 파일을 저장할 때 사용한 규칙을 아려주지 않는다면?
   윈도우즈에서는 "MS949" 규칙으로 되어있다고 가정할 것이고,
   macOS, Linux, Unix에서는 "UTF-8" 규칙으로 되어있다고 가정할 것이다.
   예) javac -encoding UTF-8 Hello.java
   
3. JVM 옵션
프로젝트폴더> java 옵션 클래스명
[JVM 옵션]
-classpath 디렉토로경로;디렉토리경로;...  : 
   클래스 파일이 있는 디렉토리의 위치
   예) java -classpath bin Hello  <== 실행할 때는 .class 확장자를 뺀다.
-cp : -classpath의 단축키